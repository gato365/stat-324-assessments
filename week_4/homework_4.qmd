---
title: "Homework 4"
format: docx
editor: visual
---

```{r warning=FALSE, message=FALSE}
library(here)                               ## File Path Management
library(statcalpolypackage)                 ## Data Extraction
library(gato365dsh2024)                     ## Data Extraction
library(dplyr)                              ## Data Transformation
library(ggplot2)                            ## Data Visualization
library(GGally)                             ## Data Visualization
library(broom)                              ## Data Analysis
source(here("R","assessment_regression.R"))
```

## `Cereal` dataset

The Cereal dataset contains nutritional information about different breakfast cereals, including variables like Calories, Sugar content, and Fiber. It allows us to explore how certain ingredients, like Sugar, are related to the overall calorie count of cereals. This dataset is useful for practicing regression, diagnostics, and understanding when transformations might be needed to better model relationships.

```{r}
Cereal %>% 
  select(-Cereal) %>% 
  ggpairs() 
```

```{r}
# Fit the linear model using the lm() function
lm_cereal <- lm(Calories ~ Sugar, data = Cereal)
summary(lm_cereal)

```

```{r}
augmented_cereal <- augment(lm_cereal)


ggplot(augmented_cereal, aes(x =.resid)) +
  geom_histogram(binwidth = 5, fill = "lightblue", color = "black", boundary = 0) + # Adjusted binning
  labs(title = "Histogram of Residuals (Calories ~ Sugar Model)",
       x = "Residuals (Actual Calories - Predicted Calories)",
       y = "Frequency") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
ggplot(augmented_cereal, aes(x =.fitted, y =.resid)) +
  geom_point(alpha = 0.7) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") + # Reference line at zero residual
  labs(title = "Residuals vs. Fitted Values (Calories ~ Sugar Model)",
       x = "Fitted Values (Predicted Calories)",
       y = "Residuals") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

(Answer Key)

```{r}
n_cereal <- nrow(Cereal)
p_cereal <- 1 
leverage_threshold_cereal <- 2 * p_cereal / n_cereal
cooks_threshold_cereal <- 4 / n_cereal
resid_sd_cereal <- sd(augmented_cereal$.resid)

```

**Leverage** (Answer Key)

```{r}
leverage_threshold_cereal
```

**Cooks Distance** (Answer Key)

```{r}
cooks_threshold_cereal
```

```{r}
augmented_cereal %>% 
  arrange(desc(.cooksd)) %>% 
  head(10) %>% 
  round(3)
```

## `mtcars` dataset

The `mtcars` dataset is a classic and widely used dataset in R that contains specifications and performance data for 32 different car models from the 1974 Motor Trend magazine. Each row represents a unique vehicle, and each column records a specific attribute related to engine performance, design, or efficiency. Some key variables include `mpg` (miles per gallon), `hp` (gross horsepower), `wt` (weight in 1000 lbs), `drat` (rear axle ratio), and `qsec` (quarter-mile time). Additionally, the dataset includes categorical variables encoded as numeric values, such as `cyl` (number of cylinders), `am` (transmission type), and `gear` (number of forward gears).

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") + # Add linear trend
  geom_smooth(method = "loess", se = FALSE, color = "blue") + # Add non-linear trend (LOESS)
  labs(title = "Fuel Efficiency (mpg) vs. Car Weight",
       subtitle = "Red: Linear Fit, Blue: LOESS Fit",
       x = "Weight (1000 lbs)",
       y = "Miles Per Gallon (mpg)") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

**LOESS (Locally Estimated Scatterplot Smoothing)** fits many small, simple models to localized sections of the data instead of assuming one global line.\
It creates a smooth curve that captures bends and changes in the relationship between variables.\
LOESS is important because it helps reveal patterns that a simple linear model might miss, especially when the true relationship is nonlinear.

```{r}
# Fit the initial linear model
lm_mtcars_orig <- lm(mpg ~ wt, data = mtcars_data)

# Display the model summary
summary(lm_mtcars_orig)

```

```{r}
summarize_reg_model(lm_mtcars_orig,"mpg ~ wt Model")
```

```{r}
augmented_mtcars <- augment(lm_mtcars_orig)

ggplot(augmented_mtcars, aes(x =.fitted, y =.resid)) +
  geom_point(alpha = 0.7) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") + 
  labs(title = "Residuals vs. Fitted Values (mpg ~ wt Model)",
       x = "Fitted Values (Predicted mpg)",
       y = "Residuals") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

(Answer Key)

```{r}
n_mtcars <- nrow(mtcars)
p_mtcars <- 1 
leverage_threshold_mtcars <- 2 * p_mtcars / n_mtcars
cooks_threshold_mtcars <- 4 / n_mtcars


```

**Leverage** (Answer Key)

```{r}
leverage_threshold_mtcars
```

**Cooks Distance** (Answer Key)

```{r}
cooks_threshold_mtcars
```

```{r}
augmented_mtcars %>% 
  select(-.rownames) %>%
  arrange(desc(.cooksd)) %>% 
  head(10) %>% 
  round(3)
```

------------------------------------------------------------------------

```{r}

mtcars_data <- mtcars %>%
  mutate(log10_wt = log10(wt))



ggplot(mtcars_data, aes(x = log10_wt, y = mpg)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
  geom_smooth(method = "loess", se = FALSE, color = "blue") +
  labs(title = "Fuel Efficiency (mpg) vs. Log(Weight)",
       subtitle = "Red: Linear Fit, Blue: LOESS Fit",
       x = "Log 10 - Weight (log(1000 lbs))",
       y = "Miles Per Gallon (mpg)") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}

lm_mtcars_transformed <- lm(mpg ~ log10_wt, data = mtcars_data)

summary(lm_mtcars_transformed)
```

```{r}
summarize_reg_model(lm_mtcars_transformed, "mpg ~ log10_wt Model")
```

```{r}
augmented_mtcars_transformed <- augment(lm_mtcars_transformed)

ggplot(augmented_mtcars_transformed, aes(x =.fitted, y =.resid)) +
  geom_point(alpha = 0.7) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") + 
  labs(title = "Residuals vs. Fitted Values (mpg ~ lo10g_wt Model)",
       x = "Fitted Values (Predicted mpg)",
       y = "Residuals") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

(Answer Key)

```{r}
n_mtcars <- nrow(mtcars)
p_mtcars <- 1 
leverage_threshold_mtcars <- 2 * p_mtcars / n_mtcars
cooks_threshold_mtcars <- 4 / n_mtcars


```

**Leverage** (Answer Key)

```{r}
leverage_threshold_mtcars
```

**Cooks Distance** (Answer Key)

```{r}
cooks_threshold_mtcars
```

```{r}
augmented_mtcars_transformed %>% 
  select(-.rownames) %>% 
  arrange(desc(.cooksd)) %>% 
  head(10) %>% 
  round(3)
```
