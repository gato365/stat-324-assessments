---
title: "Homework 5"
format: docx
editor: visual
---


## Description

The `Auto` dataset from the ISLR2 package contains information on various automobile models from the 1970s and 1980s, providing a useful context for exploring relationships between vehicle characteristics and fuel efficiency. It includes **392 observations** on **nine variables**, such as `mpg` (miles per gallon), `horsepower`, `weight`, `acceleration`, `displacement`, `cylinders`, and `year`. These variables are a mix of quantitative and categorical data, with the `name` column identifying each car model. The dataset is particularly valuable for regression analysis due to its real-world relevance and the presence of nonlinear relationships, multicollinearity, and opportunities for transformationâ€”making it ideal for studying how predictor variables influence fuel efficiency.


```{r message=FALSE, warning=FALSE}
library(here)                               ## File Path Management
library(ISLR2)                              ## Data Extraction
library(dplyr)                              ## Data Transformation
library(tidyr)                              ## Data Transformation
library(ggplot2)                            ## Data Visualization
library(broom)                              ## Data Analysis
source(here("R","assessment_regression.R"))
```



**Question:** Fit a linear regression model to predict `mpg` using `horsepower`. How well does the model fit the data, and what does the residual plot suggest about the relationship between the two variables?





## Summary Statistics
```{r}

auto_df <- Auto %>% drop_na()

# Summary statistics: mean, sd, min, max
summary_stats <- auto_df %>%
  select(mpg, horsepower) %>%
  summarise(across(everything(), list(
    mean = mean,
    sd   = sd,
    min  = min,
    max  = max
  ), .names = "{.col}_{.fn}")) %>%
  pivot_longer(
    everything(),
    names_to = c("variable", "statistic"),
    names_sep = "_",
    values_to = "value"
  ) 

# Compute correlation
cor_val <- auto_df %>%
  summarise(correlation = cor(mpg, horsepower))

# View results
summary_stats
cor_val

```

## Visualization

```{r message=FALSE, warning=FALSE}
ggplot(auto_df, aes(x = horsepower, y = mpg)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "steelblue", linewidth = 1.2) +
  labs(
    title = "Relationship Between Horsepower and MPG",
    x = "Horsepower",
    y = "Miles Per Gallon (MPG)"
  ) +
  theme_minimal(base_size = 14) +
  theme(plot.title = element_text(hjust = 0.5))
```


Based on the graphic we should transform y but we should transform x

## Analysis
### Regular Model
```{r}
model_0 <- lm(mpg ~ horsepower, data = auto_df)
summary(model_0)
```
```{r message=FALSE, warning=FALSE}
plot_scatter_resid(model_0,auto_df ,"Original")   
```

### Transformations

```{r}
mod_1_auto_df <- auto_df %>%
  mutate(
    log_hp = log(horsepower),
    sqrt_hp  = sqrt(horsepower)
  )
```

```{r}
# Linear model with log10(horsepower)
model_1 <- lm(mpg ~ log_hp, data = mod_1_auto_df)
summary(model_1)
```
```{r message=FALSE, warning=FALSE}
plot_scatter_resid(model_1,mod_1_auto_df ,"Natural Log")   
```

```{r}
# Linear model with sqrt(horsepower)
model_2 <- lm(mpg ~ sqrt_hp, data = mod_1_auto_df)
summary(model_2)
```
```{r message=FALSE, warning=FALSE}
plot_scatter_resid(model_2,mod_1_auto_df ,"Square Root")   
```

### Interpretation of Results

```{r}
summary_model_0 <- summarize_reg_model(model_0,'original')
summary_model_1 <- summarize_reg_model(model_1,'log_hp')
summary_model_2 <- summarize_reg_model(model_2,'sqrt_hp')


bind_rows(
  summary_model_0,summary_model_1,
  summary_model_2
)

```




### Box-Cox Transformation


A Box-Cox transformation should not be used here because it is only applicable to the **response variable** (`y`), and `horsepower` is the **predictor**. Applying Box-Cox to `x` violates its assumptions and intended use.


