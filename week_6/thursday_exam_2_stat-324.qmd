---
title: "Thursday Exam 2 - STAT 324 (Swiss Dataset)"
format: docx
editor: visual
---



## **Overview of the `swiss` Dataset**

To answer the first five questions on the test, you can rely entirely on the regression modeling and selection procedures implemented in this packet using the `swiss` dataset. Begin by reviewing the overview and variable selection sections to understand the context and role of each variable—particularly that `Fertility` is the response variable and all others are quantitative predictors. This structure supports your ability to interpret regression coefficients and evaluate model utility based on the variables’ relationships.

The `swiss` dataset is a built-in R dataset containing standardized fertility measure and socio-economic indicators for 47 French-speaking provinces of Switzerland around 1888. All variables are numeric, and there are no missing values, making it convenient for regression analysis.

Our primary goal is to predict the `Fertility` measure based on other socio-economic indicators.

**Variable Selection**

We will use the following variables from the `swiss` dataset:

* `Fertility` (Common standardized fertility measure) - **Response Variable**
* `Agriculture` (% of males involved in agriculture as occupation) - Predictor
* `Examination` (% draftees receiving highest mark on army examination) - Predictor
* `Education` (% education beyond primary school for draftees) - Predictor
* `Catholic` (% 'catholic' (as opposed to 'protestant')) - Predictor
* `Infant.Mortality` (live births who live less than 1 year) - Predictor

## Preliminary Analysis

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)                ## Data Transformation
library(ggplot2)              ## Data Visualization
library(GGally)               ## Data Visualization
library(ggfortify)            ## Data Visualization
library(leaps)                ## Data Analysis
library(MASS)                 ## Data Analysis
library(broom)                ## Data Analysis
library(car)                  ## Data Analysis
```


### **1. Data Summaries**

```{r data_preparation_swiss}
swiss_df <- swiss 
summary(swiss_df)
```

### **2. Visualizations**


```{r pairplot_original_swiss, message=FALSE, warning=FALSE}
ggpairs(swiss_df)
```

### **3. Regular Model — MLR (Multiple Linear Regression)**

Fit a multiple linear regression model with `Fertility` as the response and all other selected predictors.

```{r mlr_swiss}
model_mlr_swiss <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data = swiss_df)
summary(model_mlr_swiss)
```



### **4. BIC Best Subset**

We use `regsubsets` to find the best subset of predictors based on the Bayesian Information Criterion (BIC).

```{r bic-best-swiss}
regfit_full_swiss <- regsubsets(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data = swiss_df, nvmax = 5) # Max number of predictors

plot(regfit_full_swiss)
```


### **5. AIC Stepwise Regression**

Perform stepwise model selection using AIC, starting from the full model.

```{r aic-stepwise-swiss}

initial_model_swiss <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data = swiss_df)

step_mod_swiss <- MASS::stepAIC(initial_model_swiss, direction = "both", trace = TRUE) 

```

## **Analysis of Best Model**

### **Evaluating of Best Model**
```{r}
best_model_swiss <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data = swiss_df)
summary(best_model_swiss)
```


### **Evaluating Variance Inflation Factor**

```{r}
vif(best_model_swiss)
```



### **Evaluating Residual Plots**

```{r}
autoplot(best_model_swiss) + 
  theme_bw()
```


### **Evaluating Outliers, Leverage and Influential Points**
```{r}
# Add standardized residuals
augmented_df <- augment(best_model_swiss) ## from broom package

rownames(augmented_df) <- NULL

augmented_df %>% 
  dplyr::select(-`.rownames`, -Fertility,-Agriculture,-Education,-Catholic,-Infant.Mortality) %>%
  arrange(desc(.cooksd)) %>% 
  head(10) %>% 
  round(3)
```

